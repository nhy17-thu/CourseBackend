<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 指定了mapper对应的dao -->
<mapper namespace="com.mobilecourse.backend.dao.ChatDao">

    <!-- 这个id要和dao中的函数名称一一对应，resultType代表了查询的结果，要和数据库类型一一对应 -->
    <select id="getSortedChatRecordsById" resultType="com.mobilecourse.backend.model.Chat">
        SELECT *
        FROM Chat
        WHERE senderId=#{uid} OR receiverId=#{uid}
        ORDER BY sendTime DESC
        LIMIT 100
    </select>

    <select id="getChatRecordsBySenderId" resultType="com.mobilecourse.backend.model.Chat">
        SELECT *
        FROM Chat
        WHERE senderId=#{senderId}
    </select>

    <select id="getChatRecordsByReceiverId" resultType="com.mobilecourse.backend.model.Chat">
        SELECT *
        FROM Chat
        WHERE receiverId=#{receiverId}
    </select>

    <select id="getChatRecordsBySenderAndReceiverId" resultType="com.mobilecourse.backend.model.Chat">
        SELECT *
        FROM Chat
        WHERE senderId=#{senderId} AND receiverId=#{receiverId}
    </select>

    <!-- parameterType指定了参数类型 -->
    <!-- 输入的参数要用#{}包裹,且与dao里面传入的参数一样 -->
    <insert id="addChatRecord" keyProperty="id" useGeneratedKeys="true" parameterType="com.mobilecourse.backend.model.Chat">
        INSERT INTO Chat
        <trim prefix="(" suffix=")" suffixOverrides=",">
            senderId, receiverId, content, sendTime
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{senderId}, #{receiverId}, #{content}, #{sendTime}
        </trim>;
    </insert>

</mapper>